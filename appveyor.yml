version: 'build-{build}-{branch}'

os: unstable
image: Visual Studio 2015   # на этом VM-образе установлены все Visual Studio с 2008 по 2015

branches:
  only:
    - master
    
init:
    # секция инициализации, исполняется до клонирования проекта
    # скорее всего, строчка ниже необязательна (так должно быть по умолчанию),
    # вместе с тем, она присутствует в официальных примерах, так что пусть будет:
    - git config --global core.autocrlf input
clone_folder: c:\src # выбираем локальную директорию для клонирования
shallow_clone: true              # копируем только последний коммит, без истории (git clone --depth 1)

matrix:
    fast_finish: true           # останавливаемся после возникновения ошибки в каком-то из заданий

platform:
    # будем гонять CI на amd64 и x86...
    - x64    
    - x86

configuration:
    - Release

cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - '%LocalAppData%\NuGet\Cache'    # NuGet < v3
  - '%LocalAppData%\NuGet\v3-cache' # NuGet v3
  
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "2.2.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"
    
environment:
    CODECOV_TOKEN:
        secure: e8qe5I3ngSiMDPZsLfLBP7iCZJHrFD8gsXAYTkfQ1HL09UBk10s4vWNEDVMnFoM8
    BUILD_CONFIG: $(configuration)
    COVERALLS_REPO_TOKEN:
        secure: /W0ImKAfLG96HA1nlkhhW0ntoJCRq7wps5
    APPVEYOR_RDP_PASSWORD: 1234as!&
    BOOST_ROOT: C:\Libraries\boost_1_65_1
    BOOST_LIBRARYDIR: C:\Libraries\boost_1_65_1
    PATH: "%BOOST_LIBRARYDIR%;%PATH%"
    matrix:
        # 2015
        - TOOLCHAIN: msvc14
install:
    - set QTDIR=C:\Qt\5.13.2\msvc2015_64
    - set PATH=%QTDIR%\bin;C:\Qt\Tools\mingw730_64\bin;%PATH%;
    # скрипт настройки среды и установки зависимостей:
    - call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
    - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
befire_build:
    - nuget restore c:\src\TcpCommunication.sln
  
build_script:
    - mkdir build
    - cd build
    
    - curl -s https://report.ci/annotate.py > annotate.py
    
    - msbuild c:\src\TcpCommunication.sln /m /property:Configuration=Release /verbosity:normal /parallel:true /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" > build.log
    
    #- .\debug\Tests.exe -xunitxml > tests.xml
on_failure:
    - curl -s https://raw.githubusercontent.com/report-ci/scripts/master/upload.py | python - --tool msvc --input build.log 
on_finish:
    - ps: (new-object net.webclient).UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\tests.xml))
    - curl -s https://raw.githubusercontent.com/report-ci/scripts/master/upload.py | python
    #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
    - path: ./build/release/
      name: artifacts